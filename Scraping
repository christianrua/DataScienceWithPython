"""
Chocolate Scraping with Beautiful Soup

After eating chocolate bars your whole life, you’ve decided to go on a quest to find the greatest chocolate bar in the world.

You’ve found a website that has over 1700 reviews of chocolate bars from all around the world. It’s displayed in the web browser 
on this page.

The data is displayed in a table, instead of in a csv or json. Thankfully, we have the power of BeautifulSoup that will help us 
transform this webpage into a DataFrame that we can manipulate and analyze.

The rating scale is from 1-5, as described in this review guide. A 1 is “unpleasant” chocolate, while a 5 is a bar that transcends 
“beyond the ordinary limits”.

Some questions we thought about when we found this dataset were: Where are the best cocoa beans grown? Which countries produce 
the highest-rated bars? What’s the relationship between cocoa solids percentage and rating?

Can we find a way to answer these questions, or uncover more questions, using BeautifulSoup and Pandas?

"""

import codecademylib3_seaborn
from bs4 import BeautifulSoup
import requests
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np


webpage_response=requests.get('https://s3.amazonaws.com/codecademy-content/courses/beautifulsoup/cacao/index.html')

soup=BeautifulSoup(webpage_response.content,'html.parser')

ratings=[]
raw_ratings=soup.find_all(attrs={'class':'Rating'})

raw_ratings.pop(0)


for line in raw_ratings:
  ratings.append(float(line.get_text()))

plt.hist(ratings)
plt.show

raw_company=soup.find_all(attrs={'class':'Company'})

raw_company.pop(0)
company=[]
for line in raw_company:
  company.append(line.get_text())

dic={'Company_name':company,'Ratings':ratings}
df=pd.DataFrame.from_dict(dic)

print(df.groupby('Company_name').Ratings.mean().nlargest(10))


raw_percent=soup.find_all(attrs={'class':'CocoaPercent'})
raw_percent.pop(0)
percent=[]
for line in raw_percent:
  percent.append(float(line.get_text().replace("%", "")))

df['Cocoa%']=percent

plt.scatter(df['Cocoa%'],df.Ratings)
plt.show()
